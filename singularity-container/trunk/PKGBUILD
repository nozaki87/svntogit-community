# Maintainer: George Rawlinson <grawlinson@archlinux.org>
# Contributor: Maciej Sieczka <msieczka at sieczka dot org>

_pkgname=singularity
pkgname=singularity-container
pkgver=3.8.3
pkgrel=1
pkgdesc='Application containers for secure high performance computing'
arch=('x86_64')
url='https://singularity.hpcng.org'
license=('BSD')
backup=(
  etc/singularity/capability.json
  etc/singularity/cgroups/cgroups.toml
  etc/singularity/ecl.toml
  etc/singularity/global-pgp-public
  etc/singularity/network/00_bridge.conflist
  etc/singularity/network/10_ptp.conflist
  etc/singularity/network/20_ipvlan.conflist
  etc/singularity/network/30_macvlan.conflist
  etc/singularity/network/40_fakeroot.conflist
  etc/singularity/nvliblist.conf
  etc/singularity/remote.yaml
  etc/singularity/rocmliblist.conf
  etc/singularity/seccomp-profiles/default.json
  etc/singularity/singularity.conf
)
depends=('squashfs-tools' 'libseccomp')
makedepends=('go' 'git' 'cryptsetup')
source=("$pkgname-$pkgver.tar.gz::https://github.com/hpcng/singularity/archive/v$pkgver.tar.gz"
        'tmpfiles.conf')
b2sums=('792659f3455d353038edcede5c70ee26e4d95827f696c178a493f4d572a8753cda05f7189d8f8f43894164fa3d56f7c18cf32a4b66ee10b81e80207ae9f07fe3'
        '33b6c0a8698d15155829af047df42ab2c408f7c604490bdb03210bcf2af175c86a5ad1aaba90452062b21f22f8e36b519f1a07c86ce812af89ebb6f31c160074')

prepare() {
  cd "$_pkgname-$pkgver"

  # provide version to build script
  echo "$pkgver" > VERSION

  # fix bash completion path
  sed -e "s|/etc/bash_completion.d|/usr/share/bash-completion/completions|" \
    -e "s|\$(SYSCONFDIR)/bash_completion.d|/usr/share/bash-completion/completions|" \
    -i  mlocal/frags/build_cli.mk
}

build() {
  cd "$_pkgname-$pkgver"
  export CGO_CPPFLAGS="${CPPFLAGS}"
  export CGO_CFLAGS="${CFLAGS}"
  export CGO_CXXFLAGS="${CXXFLAGS}"
  export CGO_LDFLAGS="${LDFLAGS}"
  export GOFLAGS="-buildmode=pie -trimpath -ldflags=-linkmode=external -mod=readonly -modcacherw"

  ./mconfig \
    --prefix=/usr \
    --sysconfdir=/etc \
    --libexecdir=/usr/lib \
    --localstatedir=/var/lib \
    -P release-stripped \
    -v

  make -C builddir
}

package() {
  cd "$_pkgname-$pkgver"

  # binaries & man pages
  make -C builddir DESTDIR="$pkgdir" install man

  # license
  install -vDm644 LICENSE.md -t "$pkgdir/usr/share/licenses/$pkgname"

  # documentation
  install -vDm644 -t "$pkgdir/usr/share/doc/$pkgname" README.md

  # let systemd-tmpfiles generate state directory
  rm -rf "$pkgdir/var"
  install -vDm644 "$srcdir/tmpfiles.conf" \
    "$pkgdir/usr/lib/tmpfiles.d/$pkgname.conf"
}
